/***************************************

---------------creaBase DDL-------------

Autores:



Fecha: 11/05/2025

Descripcion: Este es el script para crear la base de datos

------------------------------------------


******************************************/

create database [APPSAFE_TEAM_UNO_DE_TRES]
go

use [APPSAFE_TEAM_UNO_DE_TRES]
go

CREATE SCHEMA PERSONA
go
CREATE SCHEMA RECORRIDO
go
CREATE SCHEMA INTERACCION
go
-- Nonclustered indexes for every foreign key

-- PERSONA.USUARIO
CREATE NONCLUSTERED INDEX IX_USUARIO_ID_USUARIO_RECOMIENDA ON PERSONA.USUARIO(ID_USUARIO_RECOMIENDA);

-- INTERACCION.TARJETA
CREATE NONCLUSTERED INDEX IX_TARJETA_ID_USUARIO ON INTERACCION.TARJETA(ID_USUARIO);
CREATE NONCLUSTERED INDEX IX_TARJETA_ID_BANCO ON INTERACCION.TARJETA(ID_BANCO);

-- INTERACCION.FACTURA
CREATE NONCLUSTERED INDEX IX_FACTURA_ID_USUARIO ON INTERACCION.FACTURA(ID_USUARIO);

-- PERSONA.ADMINISTRADOR
CREATE NONCLUSTERED INDEX IX_ADMINISTRADOR_ID_USUARIO ON PERSONA.ADMINISTRADOR(ID_USUARIO);

-- TELEFONO
CREATE NONCLUSTERED INDEX IX_TELEFONO_ID_USUARIO ON TELEFONO(ID_USUARIO);

-- PERSONA.CONDUCTOR
CREATE NONCLUSTERED INDEX IX_CONDUCTOR_ID_USUARIO ON PERSONA.CONDUCTOR(ID_USUARIO);

-- PAGO
CREATE NONCLUSTERED INDEX IX_PAGO_ID_USUARIO ON PAGO(ID_USUARIO);

-- MODELO
CREATE NONCLUSTERED INDEX IX_MODELO_ID_MARCA ON MODELO(ID_MARCA);

-- VEHICULO
CREATE NONCLUSTERED INDEX IX_VEHICULO_ID_USUARIO ON VEHICULO(ID_USUARIO);
CREATE NONCLUSTERED INDEX IX_VEHICULO_ID_MODELO ON VEHICULO(ID_MODELO);
CREATE NONCLUSTERED INDEX IX_VEHICULO_COLOR_VEHICULO ON VEHICULO(COLOR_VEHICULO);

-- INTERACCION.QUEJA
CREATE NONCLUSTERED INDEX IX_QUEJA_ID_USUARIO ON INTERACCION.QUEJA(ID_USUARIO);
CREATE NONCLUSTERED INDEX IX_QUEJA_ID_VEHICULO ON INTERACCION.QUEJA(ID_VEHICULO);
CREATE NONCLUSTERED INDEX IX_QUEJA_ID_ADMINISTRADOR ON INTERACCION.QUEJA(ID_ADMINISTRADOR);
CREATE NONCLUSTERED INDEX IX_QUEJA_ID_MOTIVO_QUEJA ON INTERACCION.QUEJA(ID_MOTIVO_QUEJA);

-- RESOLUCION
CREATE NONCLUSTERED INDEX IX_RESOLUCION_ID_QUEJA ON RESOLUCION(ID_QUEJA);

-- INTERACCION.DESCUENTO
CREATE NONCLUSTERED INDEX IX_DESCUENTO_ID_MOTIVO ON INTERACCION.DESCUENTO(ID_MOTIVO);

-- USUARIO_DESCUENTO
CREATE NONCLUSTERED INDEX IX_USUARIO_DESCUENTO_ID_DESCUENTO ON USUARIO_DESCUENTO(ID_DESCUENTO);
CREATE NONCLUSTERED INDEX IX_USUARIO_DESCUENTO_ID_USUARIO ON USUARIO_DESCUENTO(ID_USUARIO);

-- RECORRIDO.VIAJE
CREATE NONCLUSTERED INDEX IX_VIAJE_ID_FACTURA ON RECORRIDO.VIAJE(ID_FACTURA);
CREATE NONCLUSTERED INDEX IX_VIAJE_ID_VEHICULO ON RECORRIDO.VIAJE(ID_VEHICULO);
CREATE NONCLUSTERED INDEX IX_VIAJE_CLAVE_ACTUAL ON RECORRIDO.VIAJE(CLAVE_ACTUAL);
CREATE NONCLUSTERED INDEX IX_VIAJE_ID_USUARIO ON RECORRIDO.VIAJE(ID_USUARIO);

-- RECORRIDO.BITACORA
CREATE NONCLUSTERED INDEX IX_BITACORA_ID_VIAJE ON RECORRIDO.BITACORA(ID_VIAJE);

-- RECORRIDO.ESTATUS_VIAJE
CREATE NONCLUSTERED INDEX IX_ESTATUS_VIAJE_ID_VIAJE ON RECORRIDO.ESTATUS_VIAJE(ID_VIAJE);
CREATE NONCLUSTERED INDEX IX_ESTATUS_VIAJE_CLAVE_ESTATUS ON RECORRIDO.ESTATUS_VIAJE(CLAVE_ESTATUS);

-- RECORRIDO.ACEPTADO
CREATE NONCLUSTERED INDEX IX_ACEPTADO_ID_VIAJE ON RECORRIDO.ACEPTADO(ID_VIAJE);
CREATE NONCLUSTERED INDEX IX_ACEPTADO_ID_ETIQUETA_ACEPTADO ON RECORRIDO.ACEPTADO(ID_ETIQUETA_ACEPTADO);

-- RECORRIDO.ACCIDENTE
CREATE NONCLUSTERED INDEX IX_ACCIDENTE_ID_TIPO_ACCIDENTE ON RECORRIDO.ACCIDENTE(ID_TIPO_ACCIDENTE);
CREATE NONCLUSTERED INDEX IX_ACCIDENTE_ID_ACEPTADO ON RECORRIDO.ACCIDENTE(ID_ACEPTADO);
CREATE NONCLUSTERED INDEX IX_ACCIDENTE_UBICACION ON RECORRIDO.ACCIDENTE(UBICACION);

CREATE NONCLUSTERED INDEX IX_VIAJE_FECHA_SOLICITUD ON RECORRIDO.VIAJE(FECHA_SOLICITUD);
CREATE NONCLUSTERED INDEX IX_HORA_INICIO_CURSO ON RECORRIDO.ACEPTADO(HORA_INICIO_CURSO); 

CREATE TABLE PERSONA.USUARIO(
    ID_USUARIO               int               NOT NULL		IDENTITY(1,1),		
    ID_USUARIO_RECOMIENDA    int               NULL,
    TIPO_USUARIO             char(1)           NOT NULL,
    NOMBRE_PILA              varchar(40)       NOT NULL,
    APELLIDOM                varchar(40)       NULL,
    APELLIDOP                varchar(40)       NOT NULL,
    CLAVE_ACCESO             char(10)          NOT NULL,
    NUMERO_CELULAR           numeric(10, 0)    NOT NULL,
    NOMBRE_USUARIO           varchar(40)       NOT NULL,
    CORREO                   varchar(40)       NOT NULL,
    FECHA_REGISTRO           date              NOT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY CLUSTERED (ID_USUARIO),
    CONSTRAINT FK_USUARIO_RECOMIENDA FOREIGN KEY (ID_USUARIO_RECOMIENDA) REFERENCES PERSONA.USUARIO(ID_USUARIO),
    CONSTRAINT AK_NOMBRE_USUARIO UNIQUE (NOMBRE_USUARIO),
    CONSTRAINT AK_CORREO UNIQUE (CORREO),
    CONSTRAINT AK_TELEFONO UNIQUE (NUMERO_CELULAR),
    CONSTRAINT CK9 CHECK (LEN(CLAVE_ACCESO)=10
    AND CLAVE_ACCESO COLLATE Latin1_General_BIN LIKE '%[A-Z]%'
    AND CLAVE_ACCESO LIKE '%[0-9]%' 
    AND CLAVE_ACCESO LIKE '%[*#$]%'
    AND CLAVE_ACCESO NOT LIKE '%[^a-zA-Z0-9*#$]%'),
	CONSTRAINT CK_TIPO_USER CHECK (TIPO_USUARIO IN ('A','CH','C'))

    --insert para que se vea el funcionamiento
);
go

CREATE TABLE BANCO(

	ID_BANCO			SMALLINT			NOT NULL,
	NOMBRE_BANCO		VARCHAR(40)			NOT NULL

	CONSTRAINT PK_BANCO PRIMARY  KEY (ID_BANCO)
);
GO

CREATE TABLE INTERACCION.TARJETA(
    ID_TARJETA               int               NOT NULL     IDENTITY(1,1),  
    NUM_TARJETA				 varchar(20)       NOT NULL,
    ID_USUARIO  			 int               NOT NULL,
    MES                      numeric(2, 0)     NOT NULL,
    year_tarjeta                      numeric(4, 0)     NOT NULL,
    ID_BANCO                 SMALLINT	       NOT NULL,
    CONSTRAINT PK_TARJETA PRIMARY KEY CLUSTERED (iD_TARJETA),
    CONSTRAINT AK_NUMTARJETA UNIQUE (NUM_TARJETA),
    CONSTRAINT FK_USUARIO_TARJETA FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
	CONSTRAINT FK_BANCO_TARJETA FOREIGN KEY (ID_BANCO) REFERENCES BANCO(ID_BANCO) 
);
go

CREATE TABLE INTERACCION.FACTURA(
    ID_FACTURA               int               NOT NULL		IDENTITY(1,1),
    ID_USUARIO               int               NOT NULL,
    RFC                      varchar(13)       NOT NULL,
    FECHA_FACTURA            date              NOT NULL,
    IMPORTE_TOTAL            money             NOT NULL,
    DIRECCION_FACTURACION    varchar(150)       NOT NULL,  
    CONSTRAINT PK_FACTURA PRIMARY KEY CLUSTERED (ID_FACTURA),
    CONSTRAINT FK_USUARIO_FACTURA FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_RFC UNIQUE (RFC)
);
go

CREATE TABLE PERSONA.ADMINISTRADOR(
    ID_USUARIO               int               NOT NULL,
    FECHA_INGRESO            date              NOT NULL,
    CONSTRAINT FK_USUARIO_ADMINISTRADOR FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY CLUSTERED (ID_USUARIO)
);
go

CREATE TABLE TELEFONO(
    NUM_TELEFONO             numeric(10, 0)    NOT NULL,
    ID_USUARIO               int               NOT NULL,
    CONSTRAINT FK_ADMINISTRADOR_TELEFONO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.ADMINISTRADOR(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_TELEFONO PRIMARY KEY CLUSTERED (NUM_TELEFONO ASC,ID_USUARIO ASC)
);
go

CREATE TABLE PERSONA.CONDUCTOR(
    ID_USUARIO               int               NOT NULL,
    FECHA_VIGENCIA           date              NOT NULL,
    DESCRIPCION              varchar(600)      NOT NULL,
    FOTO_RECIENTE            varbinary         NOT NULL,
    NUM_LICENCIA             numeric(8, 0)     NOT NULL,
    CONSTRAINT FK_USUARIO_CONDUCTOR FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_CONDUCTOR PRIMARY KEY CLUSTERED (ID_USUARIO),
    CONSTRAINT AK_NUM_LICENCIA UNIQUE (NUM_LICENCIA)
);
go

CREATE TABLE PAGO(
    NUM_PAGO       			 int      		   NOT NULL,
    ID_USUARIO     			 int      		   NOT NULL,
    FECHA_PAGO     			 date     		   NOT NULL,
    MONTO_TOTAL    			 money    		   NOT NULL,
    CONSTRAINT FK_CONDUCTOR_PAGO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.CONDUCTOR(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_PAGO PRIMARY KEY CLUSTERED (NUM_PAGO ASC,ID_USUARIO ASC)
);
go

CREATE TABLE MARCA(
    ID_MARCA    			 TINYINT           NOT NULL		IDENTITY(1,1),  
    MARCA       			 varchar(40)       NOT NULL,
    CONSTRAINT PK_MARCA PRIMARY KEY CLUSTERED (ID_MARCA),
    CONSTRAINT AK_MARCA UNIQUE (MARCA)
);
go

CREATE TABLE MODELO(
    ID_MODELO    			 smallint          NOT NULL		IDENTITY(1,1),
    ID_MARCA     			 tinyint          NOT NULL,
    MODELO       			 varchar(40)       NOT NULL,
    CONSTRAINT PK_MODELO PRIMARY KEY CLUSTERED (ID_MODELO),
    CONSTRAINT FK_MARCA_MODELO FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_MODELO UNIQUE (MODELO)
);
go

CREATE TABLE COLOR(
	ID_COLOR   tinyint			NOT NULL,
	NOMBRE_COLOR varchar(20)    NOT NULL,
	CONSTRAINT PK_ID_COLOR PRIMARY KEY CLUSTERED (ID_COLOR)
)

CREATE TABLE VEHICULO(
    ID_VEHICULO            		 int    		   NOT NULL		IDENTITY(1,1),
	NUM_SERIE_VEHICULO			char(17)           NOT NULL,
   	ID_USUARIO 		 		 int               NOT NULL,
    ID_MODELO          		 smallint          NOT NULL,
    NUMPLACA          		 varchar(6)        NOT NULL,
    year_auto              	 	 numeric (4,0)     NOT NULL,
    DISPONIBLE         		 bit               NOT NULL,
	COLOR_VEHICULO             tinyint			NOT NULL,
    CONSTRAINT PK_VEHICULO PRIMARY KEY CLUSTERED (ID_VEHICULO),
    CONSTRAINT FK_CONDUCTOR_VEHICULO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.CONDUCTOR(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
	CONSTRAINT FK_MODELO_VEHICULO FOREIGN KEY (ID_MODELO) REFERENCES MODELO(ID_MODELO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_NUMPLACA UNIQUE (NUMPLACA),
	CONSTRAINT AK_NUM_SERIE_VEHICULO UNIQUE(NUM_SERIE_VEHICULO),
	CONSTRAINT FK_COLOR_VEHICULO FOREIGN KEY (COLOR_VEHICULO) REFERENCES COLOR(ID_COLOR)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go


CREATE TABLE QUEJA_MOTIVO(
	id_motivo_queja		smallint	NOT NULL,
	descripcion			varchar(50)	NOT NULL,
	CONSTRAINT pk_motivo_queja PRIMARY KEY(id_motivo_queja)
)

CREATE TABLE INTERACCION.QUEJA(
    ID_QUEJA                 int               NOT NULL        IDENTITY(1,1),
    ID_USUARIO               int               NOT NULL,
    ID_VEHICULO                  int               NOT NULL,
    ID_ADMINISTRADOR         int               NOT NULL,
    ID_MOTIVO_QUEJA		smallint	NOT NULL,
    FECHA_EMISION            date              NOT NULL,
    CONSTRAINT PK_QUEJA PRIMARY KEY CLUSTERED (ID_QUEJA),
    CONSTRAINT FK_USUARIO_QUEJA FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO),
    CONSTRAINT FK_VEHICULO_QUEJA FOREIGN KEY (ID_VEHICULO) REFERENCES VEHICULO(ID_VEHICULO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_ADMINISTRADOR_QUEJA FOREIGN KEY (ID_ADMINISTRADOR) REFERENCES PERSONA.ADMINISTRADOR(ID_USUARIO),
	CONSTRAINT FK_MOTIVO_QUEJA	FOREIGN KEY (ID_MOTIVO_QUEJA) REFERENCES QUEJA_MOTIVO(id_motivo_queja)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

ALTER TABLE INTERACCION.QUEJA
DROP COLUMN TITULO

ALTER TABLE INTERACCION.QUEJA
ADD ID_MOTIVO_QUEJA		smallint	NOT NULL

ALTER TABLE INTERACCION.QUEJA
ADD CONSTRAINT FK_MOTIVO_QUEJA	FOREIGN KEY (ID_MOTIVO_QUEJA) REFERENCES QUEJA_MOTIVO(id_motivo_queja)

CREATE TABLE RESOLUCION(
    ID_SOL                   int               NOT NULL        IDENTITY(1,1),
    ID_QUEJA                 int               NOT NULL,
    DESCRIPCION_RESOLUCION   varchar(60)       NOT NULL,
    FECHA_ATENDIDO           date              NOT NULL,
    CONSTRAINT PK_RESOLUCION PRIMARY KEY CLUSTERED (ID_SOL),
    CONSTRAINT AK_QUEJA UNIQUE (ID_QUEJA),
    CONSTRAINT FK_QUEJA_RESOLUCION FOREIGN KEY (ID_QUEJA) REFERENCES INTERACCION.QUEJA(ID_QUEJA)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

CREATE TABLE MOTIVO(
    ID_MOTIVO                smallint          NOT NULL        IDENTITY(1,1),
    NOMBRE		             varchar(30)       NOT NULL,
    CONSTRAINT PK_MOTIVO PRIMARY KEY CLUSTERED (ID_MOTIVO)
);
go

CREATE TABLE INTERACCION.DESCUENTO(
    ID_DESCUENTO             numeric(10, 0)    NOT NULL,
    DESCRIPCION              varchar(40)       NOT NULL,
    ID_MOTIVO                smallint          NOT NULL,
    IMPORTE                  money             NOT NULL,
    VIGENCIA                 date              NOT NULL,
    CONSTRAINT PK_DESCUENTO PRIMARY KEY CLUSTERED (ID_DESCUENTO),
    CONSTRAINT FK_MOTIVO_DESCUENTO FOREIGN KEY (ID_MOTIVO) REFERENCES MOTIVO(ID_MOTIVO)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

--SCHEMA MUCHOS MUCHOS
CREATE TABLE USUARIO_DESCUENTO(
    ID_USUARIO               int               NOT NULL,
    ID_DESCUENTO             numeric(10, 0)    NOT NULL,
    CONSTRAINT FK_DESCUENTO_USUARIO FOREIGN KEY (ID_DESCUENTO) REFERENCES INTERACCION.DESCUENTO(ID_DESCUENTO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_USUARIO_DESCUENTO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
);
go

CREATE TABLE RECORRIDO.ESTATUS(
    CLAVE_ESTATUS            smallint          NOT NULL        IDENTITY(1,1),
    NOMBRE_ESTATUS           char(1)           NOT NULL,
    CONSTRAINT PK_ESTATUS PRIMARY KEY CLUSTERED (CLAVE_ESTATUS),
    CONSTRAINT CK8 CHECK(NOMBRE_ESTATUS IN ('S','G','C','E','B','P','A','X','T')),
    CONSTRAINT AK_NOMBREESTATUS UNIQUE (NOMBRE_ESTATUS)
);
go

CREATE TABLE RECORRIDO.VIAJE(
    ID_VIAJE                 int               NOT NULL        IDENTITY(1,1),
    ID_FACTURA               int		       NULL,
    ID_VEHICULO                  int               NOT NULL,
    CLAVE_ACTUAL             smallint          NOT NULL,
    ID_USUARIO               int               NOT NULL,
    FECHA_SOLICITUD          datetime          NOT NULL,
    LATITUD_DESTINO          varchar(15)       NOT NULL,
    LONGITUD_DESTINO         varchar(15)       NOT NULL,
    LONGITUD_ORIGEN          varchar(15)       NOT NULL,
    LATITUD_ORIGEN           varchar(15)       NOT NULL,
    TIPO                     char(1)           NOT NULL,
    TIPO_PAGO                char(1)           NOT NULL,
    TARJETA_CLIENTE          varchar(20)       NOT NULL,
    CONSTRAINT PK_VIAJE PRIMARY KEY CLUSTERED (ID_VIAJE),
    CONSTRAINT FK_FACTURA_VIAJE FOREIGN KEY (ID_FACTURA) REFERENCES INTERACCION.FACTURA(ID_FACTURA)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_VEHICULO_VIAJE FOREIGN KEY (ID_VEHICULO) REFERENCES VEHICULO(ID_VEHICULO),
    CONSTRAINT FK_ESTATUS_VIAJE FOREIGN KEY (CLAVE_ACTUAL) REFERENCES RECORRIDO.ESTATUS(CLAVE_ESTATUS)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_USUARIO_VIAJE FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO),
    CONSTRAINT CK7 CHECK (TIPO IN ('N','P')),
    CONSTRAINT CK11 CHECK (TIPO_PAGO IN ('T','E'))
);
go

CREATE TABLE RECORRIDO.BITACORA(
    CLAVE                    int               NOT NULL        IDENTITY(1,1),
    ID_VIAJE                 int               NOT NULL,
    LATITUD                  varchar(15)       NOT NULL,
    LONGITUD                 varchar(15)       NOT NULL,
    CONSTRAINT PK_BITACORA PRIMARY KEY CLUSTERED (CLAVE),
    CONSTRAINT FK_VIAJE_BITACORA FOREIGN KEY (ID_VIAJE) REFERENCES RECORRIDO.VIAJE(ID_VIAJE)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

CREATE TABLE RECORRIDO.ESTATUS_VIAJE(
    CLAVE_ESTATUS   SMALLINT   NOT NULL,
    ID_VIAJE        INT        NOT NULL,
    FECHA_ESTATUS   DATETIME   NOT NULL,
    CONSTRAINT FK_ID_VIAJE_STATUS FOREIGN KEY (ID_VIAJE) 
      REFERENCES RECORRIDO.VIAJE(ID_VIAJE)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CLAVE_ESTATUS FOREIGN KEY (CLAVE_ESTATUS) 
      REFERENCES RECORRIDO.ESTATUS(CLAVE_ESTATUS),
    CONSTRAINT PK_ESTATUS_VIAJE PRIMARY KEY CLUSTERED (ID_VIAJE, FECHA_ESTATUS)
);
go

CREATE TABLE ETIQUETA_ACEPTADO(
	ID_ETIQUETA_ACEPTADO	smallint	NULL,
	DESCRIPCION				varchar(50)	NOT NULL,
	CONSTRAINT PK_ETIQUETA_ACEPTADO	PRIMARY KEY(ID_ETIQUETA_ACEPTADO),
    CONSTRAINT AK_DESCRIPCION_ETIQUETA UNIQUE (DESCRIPCION)
)

CREATE TABLE RECORRIDO.ACEPTADO(
    ID_ACEPTADO              int               NOT NULL        IDENTITY(1,1),
    ID_VIAJE                 int               NOT NULL,
    COMENTARIOS              varchar(100)      NULL,
    PROPINA                  money             NOT NULL,
    CALIFICACION_CONDUCTOR             numeric(1, 0)     NULL,
	CALIFICACION_USUARIO     numeric(1,0)		NULL,
    HORA_INICIO_CURSO        datetime          NOT NULL,
    ETIQUETA                 varchar(20)       NULL,
    IMPORTE                  money             NOT NULL,
    TIPO_PAGO                char(1)           NOT NULL,
    CONSTRAINT PK_ACEPTADO PRIMARY KEY CLUSTERED (ID_ACEPTADO),
    CONSTRAINT FK_VIAJE_ACEPTADO FOREIGN KEY (ID_VIAJE) REFERENCES RECORRIDO.VIAJE(ID_VIAJE)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT CK_CALIFICACION_CONDUCTOR CHECK(CALIFICACION_CONDUCTOR BETWEEN 1 AND 5),
	CONSTRAINT CK_CALIFICACION_USUARIO CHECk(CALIFICACION_USUARIO BETWEEN 1 AND 5),
    CONSTRAINT CK6 CHECK(PROPINA IN (0,10,15,20)),
    CONSTRAINT CK4 CHECK(TIPO_PAGO IN ('T','E')),
);
go
ALTER TABLE RECORRIDO.ACEPTADO
DROP COLUMN ETIQUETA

ALTER TABLE RECORRIDO.ACEPTADO
ADD ID_ETIQUETA_ACEPTADO	smallint	NOT NULL

ALTER TABLE RECORRIDO.ACEPTADO
ADD CONSTRAINT FK_ETIQUETA_ACEPTADO	FOREIGN KEY(ID_ETIQUETA_ACEPTADO)   REFERENCES ETIQUETA_ACEPTADO(ID_ETIQUETA_ACEPTADO)


CREATE TABLE RECORRIDO.TIPO_ACCIDENTE(
	ID_TIPO_ACCIDENTE		smallint		NOT NULL,
	DESCRIPCION				varchar(100)	NOT NULL
	CONSTRAINT PK_TIPO_ACCIDENTE PRIMARY KEY CLUSTERED(ID_TIPO_ACCIDENTE)
)

CREATE TABLE RECORRIDO.ACCIDENTE(
	ID_ACCIDENTE	        int               NOT NULL     IDENTITY(1,1),
	ID_TIPO_ACCIDENTE		smallint		  NOT NULL,
	ID_ACEPTADO				int               NOT NULL,
	FECHA_INCIDENTE			datetime		  NOT NULL,
	HERIDOS                 bit               NOT NULL,
	MONTO_GASTADO			money			  NOT NULL,
	CONDUCTOR_RESPONSABLE	bit				  NOT NULL,
	CONSTRAINT PK_ID_ACCIDENTE	PRIMARY KEY CLUSTERED(ID_ACCIDENTE),
	CONSTRAINT FK_ACEPTADO_ACCIDENTE FOREIGN KEY(ID_ACEPTADO) REFERENCES RECORRIDO.ACEPTADO(ID_ACEPTADO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
	CONSTRAINT FK_TIPO_ACCIDENTE FOREIGN KEY(ID_TIPO_ACCIDENTE) REFERENCES RECORRIDO.TIPO_ACCIDENTE(ID_TIPO_ACCIDENTE)
        ON DELETE CASCADE
        ON UPDATE CASCADE
)

CREATE TABLE DIRECCION(
	ID_DIRECCION			int			NOT NULL,
	CALLE					varchar(70)	NOT NULL,
	NUM_EXTERIOR			varchar(10) NOT NULL,
	CIUDAD					varchar(70) NOT NULL,
	CONSTRAINT PK_DIRECCION PRIMARY KEY CLUSTERED(ID_DIRECCION)
)

ALTER TABLE RECORRIDO.ACCIDENTE
ADD UBICACION int NOT NULL;

ALTER TABLE RECORRIDO.ACCIDENTE
ADD CONSTRAINT FK_DIRECCION_ACCIDENTE FOREIGN KEY (UBICACION) 
REFERENCES DIRECCION(ID_DIRECCION);

ALTER TABLE RECORRIDO.ACCIDENTE
ADD DESCRIPCION varchar(100) NOT NULL;




--- Para Reiniciar la base de datos:

EXEC sp_MSforeachtable 'ALTER TABLE ? NOCHECK CONSTRAINT ALL';
DROP TABLE DIRECCION
DROP TABLE RECORRIDO.ACCIDENTE
DROP TABLE RECORRIDO.TIPO_ACCIDENTE
DROP TABLE RECORRIDO.ACEPTADO
DROP TABLE RECORRIDO.ESTATUS_VIAJE
DROP TABLE RECORRIDO.BITACORA
DROP TABLE RECORRIDO.VIAJE
DROP TABLE RECORRIDO.ESTATUS
DROP TABLE USUARIO_DESCUENTO
DROP TABLE INTERACCION.DESCUENTO
DROP TABLE MOTIVO
DROP TABLE RESOLUCION
DROP TABLE INTERACCION.QUEJA
DROP TABLE VEHICULO
DROP TABLE COLOR
DROP TABLE MODELO
DROP TABLE MARCA
DROP TABLE PAGO
DROP TABLE PERSONA.CONDUCTOR
DROP TABLE TELEFONO
DROP TABLE PERSONA.ADMINISTRADOR
DROP TABLE INTERACCION.FACTURA
DROP TABLE INTERACCION.TARJETA
DROP TABLE BANCO
DROP TABLE PERSONA.USUARIO

EXEC sp_MSforeachtable 'ALTER TABLE ? WITH CHECK CHECK CONSTRAINT ALL';

GO