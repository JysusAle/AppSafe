/***************************************

---------------creaBase DDL-------------

Autores: 

Fecha: 11/05/2025

Descripcion: Este es el script para crear la base de datos

------------------------------------------


******************************************/

create database [APPSAFE_TEAM_UNO_DE_TRES]

use [APPSAFE_TEAM_UNO_DE_TRES]
go

CREATE SCHEMA PERSONA
go
CREATE SCHEMA RECORRIDO
go
CREATE SCHEMA INTERACCION
go

CREATE TABLE PERSONA.USUARIO(
    ID_USUARIO               int               NOT NULL		IDENTITY(1,1),		
    ID_USUARIO_RECOMIENDA    int               NULL,
    TIPO_CLIENTE             char(1)           NOT NULL,
    NOMBRE_PILA              varchar(40)       NOT NULL,
    APELLIDOM                varchar(40)       NULL,
    APELLIDOP                varchar(40)       NOT NULL,
    CLAVE_ACCESO             char(10)          NOT NULL,
    NUMERO_CELULAR           numeric(10, 0)    NOT NULL,
    NOMBRE_USUARIO           varchar(40)       NOT NULL,
    CORREO                   varchar(40)       NOT NULL,
    FECHA_REGISTRO           date              NOT NULL,
    CONSTRAINT PK_USUARIO PRIMARY KEY CLUSTERED (ID_USUARIO),
    CONSTRAINT FK_USUARIO_RECOMIENDA FOREIGN KEY (ID_USUARIO_RECOMIENDA) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_NOMBRE_USUARIO UNIQUE (NOMBRE_USUARIO),
    CONSTRAINT AK_CORREO UNIQUE (CORREO),
    CONSTRAINT AK_NUMERO_CELULAR UNIQUE (NUMERO_CELULAR),
    CONSTRAINT CK9 CHECK (LEN(CLAVE_ACCESO)=10 
    AND CLAVE_ACCESO COLLATE Latin1_General_BIN LIKE '%[A-Z]%'
    AND CLAVE_ACCESO LIKE '%[0-9]%' 
    AND CLAVE_ACCESO LIKE '%[*#$]%'
    AND CLAVE_ACCESO NOT LIKE '%[^a-zA-Z0-9*#$]%')
);
go

CREATE TABLE INTERACCION.TARJETA(
    ID_TARJETA               int               NOT NULL     IDENTITY(1,1),  
    NUM_TARJETA				 varchar(20)       NOT NULL,
    ID_USUARIO  			 int               NOT NULL,
    MES                      numeric(2, 0)     NOT NULL,
    AÑO                      numeric(4, 0)     NOT NULL,
    BANCO                    varchar(40)       NOT NULL,
    CONSTRAINT PK_TARJETA PRIMARY KEY CLUSTERED (iD_TARJETA),
    CONSTRAINT AK_NUMTARJETA UNIQUE (NUM_TARJETA),
    CONSTRAINT FK_USUARIO_TARJETA FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE
);
go

CREATE TABLE INTERACCION.FACTURA(
    ID_FACTURA               int               NOT NULL		IDENTITY(1,1),
    ID_USUARIO               int               NOT NULL,
    RFC                      varchar(13)       NOT NULL,
    FECHA_FACTURA            date              NOT NULL,
    IMPORTE_TOTAL            money             NOT NULL,
    DIRECCION_FACTURACION    varchar(10)       NOT NULL,
    CONSTRAINT PK_FACTURA PRIMARY KEY CLUSTERED (ID_FACTURA),
    CONSTRAINT FK_USUARIO_FACTURA FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_RFC UNIQUE (RFC)
);
go

CREATE TABLE PERSONA.ADMINISTRADOR(
    ID_USUARIO               int               NOT NULL,
    FECHA_INGRESO            date              NOT NULL,
    CONSTRAINT FK_USUARIO_ADMINISTRADOR FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_ADMINISTRADOR PRIMARY KEY CLUSTERED (ID_USUARIO)
);
go

CREATE TABLE TELEFONO(
    NUM_TELEFONO             numeric(10, 0)    NOT NULL,
    ID_USUARIO               int               NOT NULL,
    CONSTRAINT FK_ADMINISTRADOR_TELEFONO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.ADMINISTRADOR(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_TELEFONO PRIMARY KEY CLUSTERED (NUM_TELEFONO ASC,ID_USUARIO ASC)
);
go

CREATE TABLE PERSONA.CONDUCTOR(
    ID_USUARIO               int               NOT NULL,
    FECHA_VIGENCIA           date              NOT NULL,
    DESCRIPCIÓN              varchar(600)      NOT NULL,
    FOTO_RECIENTE            image             NOT NULL,
    NUM_LICENCIA             numeric(8, 0)     NOT NULL,
    CONSTRAINT FK_USUARIO_CONDUCTOR FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_CONDUCTOR PRIMARY KEY CLUSTERED (ID_USUARIO),
    CONSTRAINT AK_NUM_LICENCIA UNIQUE (NUM_LICENCIA)
);
go

CREATE TABLE PAGO(
    NUM_PAGO       			 int      		   NOT NULL,
    ID_USUARIO     			 int      		   NOT NULL,
    FECHA_PAGO     			 date     		   NOT NULL,
    MONTO_TOTAL    			 money    		   NOT NULL,
    CONSTRAINT FK_CONDUCTOR_PAGO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.CONDUCTOR(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT PK_TELEFONO PRIMARY KEY CLUSTERED (NUM_PAGO ASC,ID_USUARIO ASC)
);
go

CREATE TABLE MARCA(
    ID_MARCA    			 smallint          NOT NULL		IDENTITY(1,1),
    MARCA       			 varchar(40)       NOT NULL,
    CONSTRAINT PK_MARCA PRIMARY KEY CLUSTERED (ID_MARCA),
    CONSTRAINT AK_MARCA UNIQUE (MARCA)
);
go

CREATE TABLE MODELO(
    ID_MODELO    			 int               NOT NULL		IDENTITY(1,1),
    ID_MARCA     			 smallint          NOT NULL,
    MODELO       			 varchar(40)       NOT NULL,
    CONSTRAINT PK_MODELO PRIMARY KEY CLUSTERED (ID_MODELO),
    CONSTRAINT FK_MARCA_MODELO FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_MODELO UNIQUE (MODELO)
);
go

CREATE TABLE AUTO(
    ID_AUTO            		 int    		   NOT NULL		IDENTITY(1,1),
   	ID_USUARIO 		 		 int               NOT NULL,
    ID_MODELO          		 int               NOT NULL,
    NUMPLACA          		 varchar(6)        NOT NULL,
    AÑO              	 	 date              NOT NULL,
    DISPONIBLE         		 bit               NOT NULL,
    CONSTRAINT PK_AUTO PRIMARY KEY CLUSTERED (ID_AUTO),
    CONSTRAINT FK_CONDUCTOR_AUTO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.CONDUCTOR(ID_USUARIO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
	CONSTRAINT FK_MODELO_AUTO FOREIGN KEY (ID_MODELO) REFERENCES MODELO(ID_MODELO)
    	ON DELETE CASCADE
    	ON UPDATE CASCADE,
    CONSTRAINT AK_NUMPLACA UNIQUE (NUMPLACA)
);
go

--Trigger que valida la cantidad de autos 

CREATE TABLE INTERACCION.QUEJA(
    ID_QUEJA                 int               NOT NULL        IDENTITY(1,1),
    ID_USUARIO               int               NOT NULL,
    ID_AUTO                  Int			   NOT NULL,
    ID_ADMINISTRADOR         int               NOT NULL,
    TITULO                   varchar(40)       NOT NULL,
    FECHA_EMISION            date              NOT NULL,
    CONSTRAINT PK_QUEJA PRIMARY KEY CLUSTERED (ID_QUEJA),
    CONSTRAINT FK_USUARIO_QUEJA FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_AUTO_QUEJA FOREIGN KEY (ID_AUTO) REFERENCES AUTO(ID_AUTO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_ADMINISTRADOR_QUEJA FOREIGN KEY (ID_ADMINISTRADOR) REFERENCES PERSONA.ADMINISTRADOR(ID_USUARIO)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

--Trigger que verifica que una queja no es solucionada por quien la hizo

CREATE TABLE RESOLUCION(
    ID_SOL                   int               NOT NULL        IDENTITY(1,1),
    ID_QUEJA                 int		       NOT NULL,
    DESCRIPCION_RESOLUCION   varchar(60)       NOT NULL,
    FECHA_ATENDIDO           date              NOT NULL,
    CONSTRAINT PK_RESOLUCION PRIMARY KEY CLUSTERED (ID_SOL),
    CONSTRAINT AK_QUEJA UNIQUE (ID_QUEJA),
    CONSTRAINT FK_QUEJA_RESOLUCION FOREIGN KEY (ID_QUEJA) REFERENCES INTERACCION.QUEJA(ID_QUEJA)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

CREATE TABLE MOTIVO(
    ID_MOTIVO                smallint          NOT NULL        IDENTITY(1,1),
    DESCRIPCION              varchar(30)       NOT NULL,
    CONSTRAINT PK_MOTIVO PRIMARY KEY CLUSTERED (ID_MOTIVO)
);
go

CREATE TABLE INTERACCION.DESCUENTO(
    ID_DESCUENTO             numeric(10, 0)    NOT NULL,
    DESCRIPCION              varchar(40)       NOT NULL,
    ID_MOTIVO                smallint          NOT NULL,
    IMPORTE                  money             NOT NULL,
    VIGENCIA                 date              NOT NULL,
    CONSTRAINT PK_DESCUENTO PRIMARY KEY CLUSTERED (ID_DESCUENTO),
    CONSTRAINT FK_MOTIVO_DESCUENTO FOREIGN KEY (ID_MOTIVO) REFERENCES MOTIVO(ID_MOTIVO)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

CREATE TABLE USUARIO_DESCUENTO(
    ID_USUARIO               int               NOT NULL,
    ID_DESCUENTO             numeric(10, 0)    NOT NULL,
    CONSTRAINT FK_DESCUENTO_USUARIO FOREIGN KEY (ID_DESCUENTO) REFERENCES INTERACCION.DESCUENTO(ID_DESCUENTO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_USUARIO_DESCUENTO FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,

);
go

CREATE TABLE RECORRIDO.ESTATUS(
    CLAVE_ESTATUS            smallint          NOT NULL        IDENTITY(1,1),
    NOMBRE_ESTATUS           char(1)           NOT NULL,
    CONSTRAINT PK_ESTATUS PRIMARY KEY CLUSTERED (CLAVE_ESTATUS),
    CONSTRAINT CK8 CHECK(NOMBRE_ESTATUS IN ('S','G','C','E','B','P','A','X','T')),
    CONSTRAINT AK_NOMBREESTATUS UNIQUE (NOMBRE_ESTATUS)
);
go

CREATE TABLE RECORRIDO.VIAJE(
    ID_VIAJE                 int               NOT NULL        IDENTITY(1,1),
    ID_FACTURA               int		       NULL,
    ID_AUTO                  int		       NOT NULL,
    CLAVE_ACTUAL             smallint          NOT NULL,
    ID_USUARIO               int               NOT NULL,
    FECHA_SOLICITUD          datetime          NOT NULL,
    LATITUD_DESTINO          varchar(15)       NOT NULL,
    LONGITUD_DESTINO         varchar(15)       NOT NULL,
    LONGITUD_ORIGEN          varchar(15)       NOT NULL,
    LATITUD_ORIGEN           varchar(15)       NOT NULL,
    TIPO                     char(1)           NOT NULL,
    TIPO_PAGO                char(1)           NOT NULL,
    TARJETA_CLIENTE          varchar(20)       NOT NULL,
    CONSTRAINT PK_VIAJE PRIMARY KEY CLUSTERED (ID_VIAJE),
    CONSTRAINT FK_FACTURA_VIAJE FOREIGN KEY (ID_FACTURA) REFERENCES INTERACCION.FACTURA(ID_FACTURA)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_AUTO_VIAJE FOREIGN KEY (ID_AUTO) REFERENCES AUTO(ID_AUTO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_ESTATUS_VIAJE FOREIGN KEY (CLAVE_ACTUAL) REFERENCES RECORRIDO.ESTATUS(CLAVE_ESTATUS)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT FK_USUARIO_VIAJE FOREIGN KEY (ID_USUARIO) REFERENCES PERSONA.USUARIO(ID_USUARIO)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT CK7 CHECK (TIPO IN ('N','P')),
    CONSTRAINT CK11 CHECK (TIPO_PAGO IN ('T','E'))
);
go

CREATE TABLE RECORRIDO.BITACORA(
    CLAVE                    int               NOT NULL        IDENTITY(1,1),
    ID_VIAJE                 int               NOT NULL,
    LATITUD                  varchar(15)       NOT NULL,
    LONGITUD                 varchar(15)       NOT NULL,
    CONSTRAINT PK_BITACORA PRIMARY KEY CLUSTERED (CLAVE ASC),
    CONSTRAINT FK_VIAJE_BITACORA FOREIGN KEY (ID_VIAJE) REFERENCES RECORRIDO.VIAJE(ID_VIAJE)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
go

CREATE TABLE RECORRIDO.ESTATUS_VIAJE(
    CLAVE_ESTATUS   SMALLINT   NOT NULL,
    ID_VIAJE        INT        NOT NULL,
    FECHA_ESTATUS   DATETIME   NOT NULL,
    CONSTRAINT FK_VIAJE_ESTATUS FOREIGN KEY (ID_VIAJE) 
      REFERENCES RECORRIDO.VIAJE(ID_VIAJE)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ESTATUS_VIAJE FOREIGN KEY (CLAVE_ESTATUS) 
      REFERENCES RECORRIDO.ESTATUS(CLAVE_ESTATUS)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT PK_ESTATUS_VIAJE PRIMARY KEY CLUSTERED (ID_VIAJE, FECHA_ESTATUS)
);
go

CREATE TABLE RECORRIDO.ACEPTADO(
    ID_ACEPTADO              int               NOT NULL        IDENTITY(1,1),
    ID_VIAJE                 int               NOT NULL,
    COMENTARIOS              varchar(100)      NULL,
    PROPINA                  money             NOT NULL,
    CALIFICACION             numeric(1, 0)     NULL,
    HORA_INICIO_CURSO        datetime          NOT NULL,
    ETIQUETA                 varchar(20)       NULL,
    IMPORTE                  money             NOT NULL,
    TIPO_PAGO                char(1)           NOT NULL,
    CONSTRAINT PK_ACEPTADO PRIMARY KEY CLUSTERED (ID_ACEPTADO),
    CONSTRAINT FK_VIAJE_ACEPTADO FOREIGN KEY (ID_VIAJE) REFERENCES RECORRIDO.VIAJE(ID_VIAJE)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    CONSTRAINT CK5 CHECK(CALIFICACION BETWEEN 1 AND 5),
    CONSTRAINT CK6 CHECK(PROPINA IN (0,10,15,20)),
    CONSTRAINT CK4 CHECK(TIPO_PAGO IN ('T','E'))
);
go